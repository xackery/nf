// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: characters/v1/characters.proto

package charactersv1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Character struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId             int32                  `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Name                  string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	LastName              string                 `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Title                 string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Suffix                string                 `protobuf:"bytes,6,opt,name=suffix,proto3" json:"suffix,omitempty"`
	ZoneId                int32                  `protobuf:"varint,7,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	ZoneInstance          int32                  `protobuf:"varint,8,opt,name=zone_instance,json=zoneInstance,proto3" json:"zone_instance,omitempty"`
	Y                     float32                `protobuf:"fixed32,9,opt,name=y,proto3" json:"y,omitempty"`
	X                     float32                `protobuf:"fixed32,10,opt,name=x,proto3" json:"x,omitempty"`
	Z                     float32                `protobuf:"fixed32,11,opt,name=z,proto3" json:"z,omitempty"`
	Heading               float32                `protobuf:"fixed32,12,opt,name=heading,proto3" json:"heading,omitempty"`
	Gender                int32                  `protobuf:"varint,13,opt,name=gender,proto3" json:"gender,omitempty"`
	Race                  int32                  `protobuf:"varint,14,opt,name=race,proto3" json:"race,omitempty"`
	Class                 int32                  `protobuf:"varint,15,opt,name=class,proto3" json:"class,omitempty"`
	Level                 int32                  `protobuf:"varint,16,opt,name=level,proto3" json:"level,omitempty"`
	Deity                 int32                  `protobuf:"varint,17,opt,name=deity,proto3" json:"deity,omitempty"`
	Birthday              int32                  `protobuf:"varint,18,opt,name=birthday,proto3" json:"birthday,omitempty"`
	LastLogin             int32                  `protobuf:"varint,19,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	TimePlayed            int32                  `protobuf:"varint,20,opt,name=time_played,json=timePlayed,proto3" json:"time_played,omitempty"`
	Level2                int32                  `protobuf:"varint,21,opt,name=level2,proto3" json:"level2,omitempty"`
	Anon                  int32                  `protobuf:"varint,22,opt,name=anon,proto3" json:"anon,omitempty"`
	Gm                    int32                  `protobuf:"varint,23,opt,name=gm,proto3" json:"gm,omitempty"`
	Face                  int32                  `protobuf:"varint,24,opt,name=face,proto3" json:"face,omitempty"`
	HairColor             int32                  `protobuf:"varint,25,opt,name=hair_color,json=hairColor,proto3" json:"hair_color,omitempty"`
	HairStyle             int32                  `protobuf:"varint,26,opt,name=hair_style,json=hairStyle,proto3" json:"hair_style,omitempty"`
	Beard                 int32                  `protobuf:"varint,27,opt,name=beard,proto3" json:"beard,omitempty"`
	BeardColor            int32                  `protobuf:"varint,28,opt,name=beard_color,json=beardColor,proto3" json:"beard_color,omitempty"`
	EyeColor_1            int32                  `protobuf:"varint,29,opt,name=eye_color_1,json=eyeColor1,proto3" json:"eye_color_1,omitempty"`
	EyeColor_2            int32                  `protobuf:"varint,30,opt,name=eye_color_2,json=eyeColor2,proto3" json:"eye_color_2,omitempty"`
	DrakkinHeritage       int32                  `protobuf:"varint,31,opt,name=drakkin_heritage,json=drakkinHeritage,proto3" json:"drakkin_heritage,omitempty"`
	DrakkinTattoo         int32                  `protobuf:"varint,32,opt,name=drakkin_tattoo,json=drakkinTattoo,proto3" json:"drakkin_tattoo,omitempty"`
	DrakkinDetails        int32                  `protobuf:"varint,33,opt,name=drakkin_details,json=drakkinDetails,proto3" json:"drakkin_details,omitempty"`
	AbilityTimeSeconds    int32                  `protobuf:"varint,34,opt,name=ability_time_seconds,json=abilityTimeSeconds,proto3" json:"ability_time_seconds,omitempty"`
	AbilityNumber         int32                  `protobuf:"varint,35,opt,name=ability_number,json=abilityNumber,proto3" json:"ability_number,omitempty"`
	AbilityTimeMinutes    int32                  `protobuf:"varint,36,opt,name=ability_time_minutes,json=abilityTimeMinutes,proto3" json:"ability_time_minutes,omitempty"`
	AbilityTimeHours      int32                  `protobuf:"varint,37,opt,name=ability_time_hours,json=abilityTimeHours,proto3" json:"ability_time_hours,omitempty"`
	Exp                   int32                  `protobuf:"varint,38,opt,name=exp,proto3" json:"exp,omitempty"`
	ExpEnabled            int32                  `protobuf:"varint,39,opt,name=exp_enabled,json=expEnabled,proto3" json:"exp_enabled,omitempty"`
	AaPointsSpent         int32                  `protobuf:"varint,40,opt,name=aa_points_spent,json=aaPointsSpent,proto3" json:"aa_points_spent,omitempty"`
	AaExp                 int32                  `protobuf:"varint,41,opt,name=aa_exp,json=aaExp,proto3" json:"aa_exp,omitempty"`
	AaPoints              int32                  `protobuf:"varint,42,opt,name=aa_points,json=aaPoints,proto3" json:"aa_points,omitempty"`
	GroupLeadershipExp    int32                  `protobuf:"varint,43,opt,name=group_leadership_exp,json=groupLeadershipExp,proto3" json:"group_leadership_exp,omitempty"`
	RaidLeadershipExp     int32                  `protobuf:"varint,44,opt,name=raid_leadership_exp,json=raidLeadershipExp,proto3" json:"raid_leadership_exp,omitempty"`
	GroupLeadershipPoints int32                  `protobuf:"varint,45,opt,name=group_leadership_points,json=groupLeadershipPoints,proto3" json:"group_leadership_points,omitempty"`
	RaidLeadershipPoints  int32                  `protobuf:"varint,46,opt,name=raid_leadership_points,json=raidLeadershipPoints,proto3" json:"raid_leadership_points,omitempty"`
	Points                int32                  `protobuf:"varint,47,opt,name=points,proto3" json:"points,omitempty"`
	CurHp                 int32                  `protobuf:"varint,48,opt,name=cur_hp,json=curHp,proto3" json:"cur_hp,omitempty"`
	Mana                  int32                  `protobuf:"varint,49,opt,name=mana,proto3" json:"mana,omitempty"`
	Endurance             int32                  `protobuf:"varint,50,opt,name=endurance,proto3" json:"endurance,omitempty"`
	Intoxication          int32                  `protobuf:"varint,51,opt,name=intoxication,proto3" json:"intoxication,omitempty"`
	Str                   int32                  `protobuf:"varint,52,opt,name=str,proto3" json:"str,omitempty"`
	Sta                   int32                  `protobuf:"varint,53,opt,name=sta,proto3" json:"sta,omitempty"`
	Cha                   int32                  `protobuf:"varint,54,opt,name=cha,proto3" json:"cha,omitempty"`
	Dex                   int32                  `protobuf:"varint,55,opt,name=dex,proto3" json:"dex,omitempty"`
	Int                   int32                  `protobuf:"varint,56,opt,name=int,proto3" json:"int,omitempty"`
	Agi                   int32                  `protobuf:"varint,57,opt,name=agi,proto3" json:"agi,omitempty"`
	Wis                   int32                  `protobuf:"varint,58,opt,name=wis,proto3" json:"wis,omitempty"`
	ZoneChangeCount       int32                  `protobuf:"varint,59,opt,name=zone_change_count,json=zoneChangeCount,proto3" json:"zone_change_count,omitempty"`
	Toxicity              int32                  `protobuf:"varint,60,opt,name=toxicity,proto3" json:"toxicity,omitempty"`
	HungerLevel           int32                  `protobuf:"varint,61,opt,name=hunger_level,json=hungerLevel,proto3" json:"hunger_level,omitempty"`
	ThirstLevel           int32                  `protobuf:"varint,62,opt,name=thirst_level,json=thirstLevel,proto3" json:"thirst_level,omitempty"`
	AbilityUp             int32                  `protobuf:"varint,63,opt,name=ability_up,json=abilityUp,proto3" json:"ability_up,omitempty"`
	LdonPointsGuk         int32                  `protobuf:"varint,64,opt,name=ldon_points_guk,json=ldonPointsGuk,proto3" json:"ldon_points_guk,omitempty"`
	LdonPointsMir         int32                  `protobuf:"varint,65,opt,name=ldon_points_mir,json=ldonPointsMir,proto3" json:"ldon_points_mir,omitempty"`
	LdonPointsMmc         int32                  `protobuf:"varint,66,opt,name=ldon_points_mmc,json=ldonPointsMmc,proto3" json:"ldon_points_mmc,omitempty"`
	LdonPointsRuj         int32                  `protobuf:"varint,67,opt,name=ldon_points_ruj,json=ldonPointsRuj,proto3" json:"ldon_points_ruj,omitempty"`
	LdonPointsTak         int32                  `protobuf:"varint,68,opt,name=ldon_points_tak,json=ldonPointsTak,proto3" json:"ldon_points_tak,omitempty"`
	LdonPointsAvailable   int32                  `protobuf:"varint,69,opt,name=ldon_points_available,json=ldonPointsAvailable,proto3" json:"ldon_points_available,omitempty"`
	TributeTimeRemaining  int32                  `protobuf:"varint,70,opt,name=tribute_time_remaining,json=tributeTimeRemaining,proto3" json:"tribute_time_remaining,omitempty"`
	CareerTributePoints   int32                  `protobuf:"varint,71,opt,name=career_tribute_points,json=careerTributePoints,proto3" json:"career_tribute_points,omitempty"`
	TributePoints         int32                  `protobuf:"varint,72,opt,name=tribute_points,json=tributePoints,proto3" json:"tribute_points,omitempty"`
	TributeActive         int32                  `protobuf:"varint,73,opt,name=tribute_active,json=tributeActive,proto3" json:"tribute_active,omitempty"`
	PvpStatus             int32                  `protobuf:"varint,74,opt,name=pvp_status,json=pvpStatus,proto3" json:"pvp_status,omitempty"`
	PvpKills              int32                  `protobuf:"varint,75,opt,name=pvp_kills,json=pvpKills,proto3" json:"pvp_kills,omitempty"`
	PvpDeaths             int32                  `protobuf:"varint,76,opt,name=pvp_deaths,json=pvpDeaths,proto3" json:"pvp_deaths,omitempty"`
	PvpCurrentPoints      int32                  `protobuf:"varint,77,opt,name=pvp_current_points,json=pvpCurrentPoints,proto3" json:"pvp_current_points,omitempty"`
	PvpCareerPoints       int32                  `protobuf:"varint,78,opt,name=pvp_career_points,json=pvpCareerPoints,proto3" json:"pvp_career_points,omitempty"`
	PvpBestKillStreak     int32                  `protobuf:"varint,79,opt,name=pvp_best_kill_streak,json=pvpBestKillStreak,proto3" json:"pvp_best_kill_streak,omitempty"`
	PvpWorstDeathStreak   int32                  `protobuf:"varint,80,opt,name=pvp_worst_death_streak,json=pvpWorstDeathStreak,proto3" json:"pvp_worst_death_streak,omitempty"`
	PvpCurrentKillStreak  int32                  `protobuf:"varint,81,opt,name=pvp_current_kill_streak,json=pvpCurrentKillStreak,proto3" json:"pvp_current_kill_streak,omitempty"`
	Pvp2                  int32                  `protobuf:"varint,82,opt,name=pvp2,proto3" json:"pvp2,omitempty"`
	PvpType               int32                  `protobuf:"varint,83,opt,name=pvp_type,json=pvpType,proto3" json:"pvp_type,omitempty"`
	ShowHelm              int32                  `protobuf:"varint,84,opt,name=show_helm,json=showHelm,proto3" json:"show_helm,omitempty"`
	GroupAutoConsent      int32                  `protobuf:"varint,85,opt,name=group_auto_consent,json=groupAutoConsent,proto3" json:"group_auto_consent,omitempty"`
	RaidAutoConsent       int32                  `protobuf:"varint,86,opt,name=raid_auto_consent,json=raidAutoConsent,proto3" json:"raid_auto_consent,omitempty"`
	GuildAutoConsent      int32                  `protobuf:"varint,87,opt,name=guild_auto_consent,json=guildAutoConsent,proto3" json:"guild_auto_consent,omitempty"`
	LeadershipExpOn       int32                  `protobuf:"varint,88,opt,name=leadership_exp_on,json=leadershipExpOn,proto3" json:"leadership_exp_on,omitempty"`
	RestTimer             int32                  `protobuf:"varint,89,opt,name=rest_timer,json=restTimer,proto3" json:"rest_timer,omitempty"`
	AirRemaining          int32                  `protobuf:"varint,90,opt,name=air_remaining,json=airRemaining,proto3" json:"air_remaining,omitempty"`
	AutosplitEnabled      int32                  `protobuf:"varint,91,opt,name=autosplit_enabled,json=autosplitEnabled,proto3" json:"autosplit_enabled,omitempty"`
	Lfp                   int32                  `protobuf:"varint,92,opt,name=lfp,proto3" json:"lfp,omitempty"`
	Lfg                   int32                  `protobuf:"varint,93,opt,name=lfg,proto3" json:"lfg,omitempty"`
	Mailkey               string                 `protobuf:"bytes,94,opt,name=mailkey,proto3" json:"mailkey,omitempty"`
	Xtargets              int32                  `protobuf:"varint,95,opt,name=xtargets,proto3" json:"xtargets,omitempty"`
	Firstlogon            int32                  `protobuf:"varint,96,opt,name=firstlogon,proto3" json:"firstlogon,omitempty"`
	EAaEffects            int32                  `protobuf:"varint,97,opt,name=e_aa_effects,json=eAaEffects,proto3" json:"e_aa_effects,omitempty"`
	EPercentToAa          int32                  `protobuf:"varint,98,opt,name=e_percent_to_aa,json=ePercentToAa,proto3" json:"e_percent_to_aa,omitempty"`
	EExpendedAaSpent      int32                  `protobuf:"varint,99,opt,name=e_expended_aa_spent,json=eExpendedAaSpent,proto3" json:"e_expended_aa_spent,omitempty"`
	AaPointsSpentOld      int32                  `protobuf:"varint,100,opt,name=aa_points_spent_old,json=aaPointsSpentOld,proto3" json:"aa_points_spent_old,omitempty"`
	AaPointsOld           int32                  `protobuf:"varint,101,opt,name=aa_points_old,json=aaPointsOld,proto3" json:"aa_points_old,omitempty"`
	ELastInvsnapshot      int32                  `protobuf:"varint,102,opt,name=e_last_invsnapshot,json=eLastInvsnapshot,proto3" json:"e_last_invsnapshot,omitempty"`
	DeletedAt             *timestamppb.Timestamp `protobuf:"bytes,103,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *Character) Reset() {
	*x = Character{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_v1_characters_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_characters_v1_characters_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_characters_v1_characters_proto_rawDescGZIP(), []int{0}
}

func (x *Character) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Character) GetAccountId() int32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Character) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Character) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Character) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Character) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *Character) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *Character) GetZoneInstance() int32 {
	if x != nil {
		return x.ZoneInstance
	}
	return 0
}

func (x *Character) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Character) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Character) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Character) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *Character) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *Character) GetRace() int32 {
	if x != nil {
		return x.Race
	}
	return 0
}

func (x *Character) GetClass() int32 {
	if x != nil {
		return x.Class
	}
	return 0
}

func (x *Character) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Character) GetDeity() int32 {
	if x != nil {
		return x.Deity
	}
	return 0
}

func (x *Character) GetBirthday() int32 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *Character) GetLastLogin() int32 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *Character) GetTimePlayed() int32 {
	if x != nil {
		return x.TimePlayed
	}
	return 0
}

func (x *Character) GetLevel2() int32 {
	if x != nil {
		return x.Level2
	}
	return 0
}

func (x *Character) GetAnon() int32 {
	if x != nil {
		return x.Anon
	}
	return 0
}

func (x *Character) GetGm() int32 {
	if x != nil {
		return x.Gm
	}
	return 0
}

func (x *Character) GetFace() int32 {
	if x != nil {
		return x.Face
	}
	return 0
}

func (x *Character) GetHairColor() int32 {
	if x != nil {
		return x.HairColor
	}
	return 0
}

func (x *Character) GetHairStyle() int32 {
	if x != nil {
		return x.HairStyle
	}
	return 0
}

func (x *Character) GetBeard() int32 {
	if x != nil {
		return x.Beard
	}
	return 0
}

func (x *Character) GetBeardColor() int32 {
	if x != nil {
		return x.BeardColor
	}
	return 0
}

func (x *Character) GetEyeColor_1() int32 {
	if x != nil {
		return x.EyeColor_1
	}
	return 0
}

func (x *Character) GetEyeColor_2() int32 {
	if x != nil {
		return x.EyeColor_2
	}
	return 0
}

func (x *Character) GetDrakkinHeritage() int32 {
	if x != nil {
		return x.DrakkinHeritage
	}
	return 0
}

func (x *Character) GetDrakkinTattoo() int32 {
	if x != nil {
		return x.DrakkinTattoo
	}
	return 0
}

func (x *Character) GetDrakkinDetails() int32 {
	if x != nil {
		return x.DrakkinDetails
	}
	return 0
}

func (x *Character) GetAbilityTimeSeconds() int32 {
	if x != nil {
		return x.AbilityTimeSeconds
	}
	return 0
}

func (x *Character) GetAbilityNumber() int32 {
	if x != nil {
		return x.AbilityNumber
	}
	return 0
}

func (x *Character) GetAbilityTimeMinutes() int32 {
	if x != nil {
		return x.AbilityTimeMinutes
	}
	return 0
}

func (x *Character) GetAbilityTimeHours() int32 {
	if x != nil {
		return x.AbilityTimeHours
	}
	return 0
}

func (x *Character) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *Character) GetExpEnabled() int32 {
	if x != nil {
		return x.ExpEnabled
	}
	return 0
}

func (x *Character) GetAaPointsSpent() int32 {
	if x != nil {
		return x.AaPointsSpent
	}
	return 0
}

func (x *Character) GetAaExp() int32 {
	if x != nil {
		return x.AaExp
	}
	return 0
}

func (x *Character) GetAaPoints() int32 {
	if x != nil {
		return x.AaPoints
	}
	return 0
}

func (x *Character) GetGroupLeadershipExp() int32 {
	if x != nil {
		return x.GroupLeadershipExp
	}
	return 0
}

func (x *Character) GetRaidLeadershipExp() int32 {
	if x != nil {
		return x.RaidLeadershipExp
	}
	return 0
}

func (x *Character) GetGroupLeadershipPoints() int32 {
	if x != nil {
		return x.GroupLeadershipPoints
	}
	return 0
}

func (x *Character) GetRaidLeadershipPoints() int32 {
	if x != nil {
		return x.RaidLeadershipPoints
	}
	return 0
}

func (x *Character) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *Character) GetCurHp() int32 {
	if x != nil {
		return x.CurHp
	}
	return 0
}

func (x *Character) GetMana() int32 {
	if x != nil {
		return x.Mana
	}
	return 0
}

func (x *Character) GetEndurance() int32 {
	if x != nil {
		return x.Endurance
	}
	return 0
}

func (x *Character) GetIntoxication() int32 {
	if x != nil {
		return x.Intoxication
	}
	return 0
}

func (x *Character) GetStr() int32 {
	if x != nil {
		return x.Str
	}
	return 0
}

func (x *Character) GetSta() int32 {
	if x != nil {
		return x.Sta
	}
	return 0
}

func (x *Character) GetCha() int32 {
	if x != nil {
		return x.Cha
	}
	return 0
}

func (x *Character) GetDex() int32 {
	if x != nil {
		return x.Dex
	}
	return 0
}

func (x *Character) GetInt() int32 {
	if x != nil {
		return x.Int
	}
	return 0
}

func (x *Character) GetAgi() int32 {
	if x != nil {
		return x.Agi
	}
	return 0
}

func (x *Character) GetWis() int32 {
	if x != nil {
		return x.Wis
	}
	return 0
}

func (x *Character) GetZoneChangeCount() int32 {
	if x != nil {
		return x.ZoneChangeCount
	}
	return 0
}

func (x *Character) GetToxicity() int32 {
	if x != nil {
		return x.Toxicity
	}
	return 0
}

func (x *Character) GetHungerLevel() int32 {
	if x != nil {
		return x.HungerLevel
	}
	return 0
}

func (x *Character) GetThirstLevel() int32 {
	if x != nil {
		return x.ThirstLevel
	}
	return 0
}

func (x *Character) GetAbilityUp() int32 {
	if x != nil {
		return x.AbilityUp
	}
	return 0
}

func (x *Character) GetLdonPointsGuk() int32 {
	if x != nil {
		return x.LdonPointsGuk
	}
	return 0
}

func (x *Character) GetLdonPointsMir() int32 {
	if x != nil {
		return x.LdonPointsMir
	}
	return 0
}

func (x *Character) GetLdonPointsMmc() int32 {
	if x != nil {
		return x.LdonPointsMmc
	}
	return 0
}

func (x *Character) GetLdonPointsRuj() int32 {
	if x != nil {
		return x.LdonPointsRuj
	}
	return 0
}

func (x *Character) GetLdonPointsTak() int32 {
	if x != nil {
		return x.LdonPointsTak
	}
	return 0
}

func (x *Character) GetLdonPointsAvailable() int32 {
	if x != nil {
		return x.LdonPointsAvailable
	}
	return 0
}

func (x *Character) GetTributeTimeRemaining() int32 {
	if x != nil {
		return x.TributeTimeRemaining
	}
	return 0
}

func (x *Character) GetCareerTributePoints() int32 {
	if x != nil {
		return x.CareerTributePoints
	}
	return 0
}

func (x *Character) GetTributePoints() int32 {
	if x != nil {
		return x.TributePoints
	}
	return 0
}

func (x *Character) GetTributeActive() int32 {
	if x != nil {
		return x.TributeActive
	}
	return 0
}

func (x *Character) GetPvpStatus() int32 {
	if x != nil {
		return x.PvpStatus
	}
	return 0
}

func (x *Character) GetPvpKills() int32 {
	if x != nil {
		return x.PvpKills
	}
	return 0
}

func (x *Character) GetPvpDeaths() int32 {
	if x != nil {
		return x.PvpDeaths
	}
	return 0
}

func (x *Character) GetPvpCurrentPoints() int32 {
	if x != nil {
		return x.PvpCurrentPoints
	}
	return 0
}

func (x *Character) GetPvpCareerPoints() int32 {
	if x != nil {
		return x.PvpCareerPoints
	}
	return 0
}

func (x *Character) GetPvpBestKillStreak() int32 {
	if x != nil {
		return x.PvpBestKillStreak
	}
	return 0
}

func (x *Character) GetPvpWorstDeathStreak() int32 {
	if x != nil {
		return x.PvpWorstDeathStreak
	}
	return 0
}

func (x *Character) GetPvpCurrentKillStreak() int32 {
	if x != nil {
		return x.PvpCurrentKillStreak
	}
	return 0
}

func (x *Character) GetPvp2() int32 {
	if x != nil {
		return x.Pvp2
	}
	return 0
}

func (x *Character) GetPvpType() int32 {
	if x != nil {
		return x.PvpType
	}
	return 0
}

func (x *Character) GetShowHelm() int32 {
	if x != nil {
		return x.ShowHelm
	}
	return 0
}

func (x *Character) GetGroupAutoConsent() int32 {
	if x != nil {
		return x.GroupAutoConsent
	}
	return 0
}

func (x *Character) GetRaidAutoConsent() int32 {
	if x != nil {
		return x.RaidAutoConsent
	}
	return 0
}

func (x *Character) GetGuildAutoConsent() int32 {
	if x != nil {
		return x.GuildAutoConsent
	}
	return 0
}

func (x *Character) GetLeadershipExpOn() int32 {
	if x != nil {
		return x.LeadershipExpOn
	}
	return 0
}

func (x *Character) GetRestTimer() int32 {
	if x != nil {
		return x.RestTimer
	}
	return 0
}

func (x *Character) GetAirRemaining() int32 {
	if x != nil {
		return x.AirRemaining
	}
	return 0
}

func (x *Character) GetAutosplitEnabled() int32 {
	if x != nil {
		return x.AutosplitEnabled
	}
	return 0
}

func (x *Character) GetLfp() int32 {
	if x != nil {
		return x.Lfp
	}
	return 0
}

func (x *Character) GetLfg() int32 {
	if x != nil {
		return x.Lfg
	}
	return 0
}

func (x *Character) GetMailkey() string {
	if x != nil {
		return x.Mailkey
	}
	return ""
}

func (x *Character) GetXtargets() int32 {
	if x != nil {
		return x.Xtargets
	}
	return 0
}

func (x *Character) GetFirstlogon() int32 {
	if x != nil {
		return x.Firstlogon
	}
	return 0
}

func (x *Character) GetEAaEffects() int32 {
	if x != nil {
		return x.EAaEffects
	}
	return 0
}

func (x *Character) GetEPercentToAa() int32 {
	if x != nil {
		return x.EPercentToAa
	}
	return 0
}

func (x *Character) GetEExpendedAaSpent() int32 {
	if x != nil {
		return x.EExpendedAaSpent
	}
	return 0
}

func (x *Character) GetAaPointsSpentOld() int32 {
	if x != nil {
		return x.AaPointsSpentOld
	}
	return 0
}

func (x *Character) GetAaPointsOld() int32 {
	if x != nil {
		return x.AaPointsOld
	}
	return 0
}

func (x *Character) GetELastInvsnapshot() int32 {
	if x != nil {
		return x.ELastInvsnapshot
	}
	return 0
}

func (x *Character) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type CreateCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Character *Character `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
}

func (x *CreateCharacterRequest) Reset() {
	*x = CreateCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_v1_characters_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCharacterRequest) ProtoMessage() {}

func (x *CreateCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_characters_v1_characters_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCharacterRequest.ProtoReflect.Descriptor instead.
func (*CreateCharacterRequest) Descriptor() ([]byte, []int) {
	return file_characters_v1_characters_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCharacterRequest) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

type CreateCharacterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Character *Character `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
}

func (x *CreateCharacterResponse) Reset() {
	*x = CreateCharacterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_v1_characters_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCharacterResponse) ProtoMessage() {}

func (x *CreateCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_characters_v1_characters_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCharacterResponse.ProtoReflect.Descriptor instead.
func (*CreateCharacterResponse) Descriptor() ([]byte, []int) {
	return file_characters_v1_characters_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCharacterResponse) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

type ListCharactersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListCharactersRequest) Reset() {
	*x = ListCharactersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_v1_characters_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCharactersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCharactersRequest) ProtoMessage() {}

func (x *ListCharactersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_characters_v1_characters_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCharactersRequest.ProtoReflect.Descriptor instead.
func (*ListCharactersRequest) Descriptor() ([]byte, []int) {
	return file_characters_v1_characters_proto_rawDescGZIP(), []int{3}
}

type ListCharactersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Character *Character `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
}

func (x *ListCharactersResponse) Reset() {
	*x = ListCharactersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_v1_characters_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCharactersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCharactersResponse) ProtoMessage() {}

func (x *ListCharactersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_characters_v1_characters_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCharactersResponse.ProtoReflect.Descriptor instead.
func (*ListCharactersResponse) Descriptor() ([]byte, []int) {
	return file_characters_v1_characters_proto_rawDescGZIP(), []int{4}
}

func (x *ListCharactersResponse) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

type GetCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCharacterRequest) Reset() {
	*x = GetCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_v1_characters_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterRequest) ProtoMessage() {}

func (x *GetCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_characters_v1_characters_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterRequest.ProtoReflect.Descriptor instead.
func (*GetCharacterRequest) Descriptor() ([]byte, []int) {
	return file_characters_v1_characters_proto_rawDescGZIP(), []int{5}
}

func (x *GetCharacterRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCharacterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Character *Character `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
}

func (x *GetCharacterResponse) Reset() {
	*x = GetCharacterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_v1_characters_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterResponse) ProtoMessage() {}

func (x *GetCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_characters_v1_characters_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterResponse.ProtoReflect.Descriptor instead.
func (*GetCharacterResponse) Descriptor() ([]byte, []int) {
	return file_characters_v1_characters_proto_rawDescGZIP(), []int{6}
}

func (x *GetCharacterResponse) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

type UpdateCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Character *Character `protobuf:"bytes,2,opt,name=character,proto3" json:"character,omitempty"`
}

func (x *UpdateCharacterRequest) Reset() {
	*x = UpdateCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_v1_characters_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCharacterRequest) ProtoMessage() {}

func (x *UpdateCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_characters_v1_characters_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCharacterRequest.ProtoReflect.Descriptor instead.
func (*UpdateCharacterRequest) Descriptor() ([]byte, []int) {
	return file_characters_v1_characters_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateCharacterRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCharacterRequest) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

type UpdateCharacterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Character *Character `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
}

func (x *UpdateCharacterResponse) Reset() {
	*x = UpdateCharacterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_v1_characters_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCharacterResponse) ProtoMessage() {}

func (x *UpdateCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_characters_v1_characters_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCharacterResponse.ProtoReflect.Descriptor instead.
func (*UpdateCharacterResponse) Descriptor() ([]byte, []int) {
	return file_characters_v1_characters_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateCharacterResponse) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

type DeleteCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCharacterRequest) Reset() {
	*x = DeleteCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_v1_characters_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCharacterRequest) ProtoMessage() {}

func (x *DeleteCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_characters_v1_characters_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCharacterRequest.ProtoReflect.Descriptor instead.
func (*DeleteCharacterRequest) Descriptor() ([]byte, []int) {
	return file_characters_v1_characters_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteCharacterRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCharacterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Character *Character `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
}

func (x *DeleteCharacterResponse) Reset() {
	*x = DeleteCharacterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_v1_characters_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCharacterResponse) ProtoMessage() {}

func (x *DeleteCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_characters_v1_characters_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCharacterResponse.ProtoReflect.Descriptor instead.
func (*DeleteCharacterResponse) Descriptor() ([]byte, []int) {
	return file_characters_v1_characters_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteCharacterResponse) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

var File_characters_v1_characters_proto protoreflect.FileDescriptor

var file_characters_v1_characters_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd2,
	0x1a, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x7a, 0x6f, 0x6e,
	0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x7a, 0x6f, 0x6e, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x01, 0x7a, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x69, 0x74, 0x79, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x6e, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x61, 0x6e,
	0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x67, 0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x67, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x66, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x69, 0x72, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x61, 0x69, 0x72,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x69, 0x72, 0x5f, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x61, 0x69, 0x72, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x61, 0x72, 0x64, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x65, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x65,
	0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x62, 0x65, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0b, 0x65,
	0x79, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x31, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x79, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x12, 0x1e, 0x0a, 0x0b, 0x65,
	0x79, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x32, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x79, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x32, 0x12, 0x29, 0x0a, 0x10, 0x64,
	0x72, 0x61, 0x6b, 0x6b, 0x69, 0x6e, 0x5f, 0x68, 0x65, 0x72, 0x69, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x72, 0x61, 0x6b, 0x6b, 0x69, 0x6e, 0x48, 0x65,
	0x72, 0x69, 0x74, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x72, 0x61, 0x6b, 0x6b, 0x69,
	0x6e, 0x5f, 0x74, 0x61, 0x74, 0x74, 0x6f, 0x6f, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x64, 0x72, 0x61, 0x6b, 0x6b, 0x69, 0x6e, 0x54, 0x61, 0x74, 0x74, 0x6f, 0x6f, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x72, 0x61, 0x6b, 0x6b, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x72, 0x61, 0x6b, 0x6b, 0x69, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x22,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x23, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x30, 0x0a, 0x14, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x24, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x25, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x78,
	0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x27, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x61, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f,
	0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x61, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x61,
	0x5f, 0x65, 0x78, 0x70, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x61, 0x45, 0x78,
	0x70, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x61, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x2a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x30,
	0x0a, 0x14, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x45, 0x78, 0x70,
	0x12, 0x2e, 0x0a, 0x13, 0x72, 0x61, 0x69, 0x64, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x72,
	0x61, 0x69, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x45, 0x78, 0x70,
	0x12, 0x36, 0x0a, 0x17, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x2d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x15, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x61, 0x69, 0x64,
	0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x72, 0x61, 0x69, 0x64, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x5f, 0x68, 0x70,
	0x18, 0x30, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x75, 0x72, 0x48, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x61, 0x6e, 0x61, 0x18, 0x31, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x61, 0x6e,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x32,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x6f, 0x78, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x6f, 0x78, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x34, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x73, 0x74, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x61, 0x18, 0x35, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x73, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x68, 0x61, 0x18, 0x36,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x68, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x78,
	0x18, 0x37, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x6e, 0x74, 0x18, 0x38, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x61, 0x67, 0x69, 0x18, 0x39, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x69, 0x12,
	0x10, 0x0a, 0x03, 0x77, 0x69, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x77, 0x69,
	0x73, 0x12, 0x2a, 0x0a, 0x11, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x7a, 0x6f,
	0x6e, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x6f, 0x78, 0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x74, 0x6f, 0x78, 0x69, 0x63, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x75, 0x6e,
	0x67, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x68, 0x75, 0x6e, 0x67, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c,
	0x74, 0x68, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x3e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x70, 0x18, 0x3f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x55, 0x70, 0x12, 0x26,
	0x0a, 0x0f, 0x6c, 0x64, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x67, 0x75,
	0x6b, 0x18, 0x40, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x64, 0x6f, 0x6e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x47, 0x75, 0x6b, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x64, 0x6f, 0x6e, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x69, 0x72, 0x18, 0x41, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x6c, 0x64, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4d, 0x69, 0x72, 0x12, 0x26,
	0x0a, 0x0f, 0x6c, 0x64, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x6d, 0x6d,
	0x63, 0x18, 0x42, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x64, 0x6f, 0x6e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x4d, 0x6d, 0x63, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x64, 0x6f, 0x6e, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x75, 0x6a, 0x18, 0x43, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x6c, 0x64, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x75, 0x6a, 0x12, 0x26,
	0x0a, 0x0f, 0x6c, 0x64, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x61,
	0x6b, 0x18, 0x44, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x64, 0x6f, 0x6e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x54, 0x61, 0x6b, 0x12, 0x32, 0x0a, 0x15, 0x6c, 0x64, 0x6f, 0x6e, 0x5f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x45, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6c, 0x64, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x46, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x12, 0x32, 0x0a, 0x15, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x47, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x54, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x48, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x49, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x76, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x4a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x76, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x76, 0x70, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x4b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x76, 0x70, 0x4b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x76, 0x70, 0x5f, 0x64, 0x65, 0x61, 0x74, 0x68, 0x73, 0x18, 0x4c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x76, 0x70, 0x44, 0x65, 0x61, 0x74, 0x68, 0x73, 0x12, 0x2c, 0x0a,
	0x12, 0x70, 0x76, 0x70, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x76, 0x70, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x70,
	0x76, 0x70, 0x5f, 0x63, 0x61, 0x72, 0x65, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x4e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x76, 0x70, 0x43, 0x61, 0x72, 0x65, 0x65,
	0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x70, 0x76, 0x70, 0x5f, 0x62,
	0x65, 0x73, 0x74, 0x5f, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x18,
	0x4f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x76, 0x70, 0x42, 0x65, 0x73, 0x74, 0x4b, 0x69,
	0x6c, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x12, 0x33, 0x0a, 0x16, 0x70, 0x76, 0x70, 0x5f,
	0x77, 0x6f, 0x72, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x61, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6b, 0x18, 0x50, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x70, 0x76, 0x70, 0x57, 0x6f, 0x72,
	0x73, 0x74, 0x44, 0x65, 0x61, 0x74, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x12, 0x35, 0x0a,
	0x17, 0x70, 0x76, 0x70, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x69, 0x6c,
	0x6c, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x18, 0x51, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14,
	0x70, 0x76, 0x70, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x76, 0x70, 0x32, 0x18, 0x52, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x76, 0x70, 0x32, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x76, 0x70, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x53, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x76, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x68, 0x65, 0x6c, 0x6d,
	0x18, 0x54, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x77, 0x48, 0x65, 0x6c, 0x6d,
	0x12, 0x2c, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x55, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x72, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x74, 0x18, 0x56, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x61, 0x69, 0x64, 0x41,
	0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x67, 0x75,
	0x69, 0x6c, 0x64, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74,
	0x18, 0x57, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x75, 0x74,
	0x6f, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x65, 0x78, 0x70, 0x5f, 0x6f, 0x6e, 0x18, 0x58, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x45,
	0x78, 0x70, 0x4f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x72, 0x18, 0x59, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x69, 0x72, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x69, 0x72, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x6f,
	0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x5b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x66, 0x70, 0x18, 0x5c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6c, 0x66, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x66, 0x67, 0x18, 0x5d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x66, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x69,
	0x6c, 0x6b, 0x65, 0x79, 0x18, 0x5e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6c,
	0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x78, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18,
	0x5f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x78, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x18, 0x60, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0c, 0x65, 0x5f, 0x61, 0x61, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x18,
	0x61, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x41, 0x61, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x73, 0x12, 0x25, 0x0a, 0x0f, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x6f, 0x5f, 0x61, 0x61, 0x18, 0x62, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x61, 0x12, 0x2d, 0x0a, 0x13, 0x65, 0x5f, 0x65, 0x78,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x61, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18,
	0x63, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x41, 0x61, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x61, 0x61, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x6c, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53, 0x70,
	0x65, 0x6e, 0x74, 0x4f, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x61, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x5f, 0x6f, 0x6c, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61,
	0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4f, 0x6c, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x5f,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x76,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x50, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x22, 0x51, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x50, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x22, 0x51, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x22,
	0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x32, 0xa9, 0x08, 0x0a,
	0x10, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0xca, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x69, 0x92, 0x41, 0x41, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x1a, 0x22, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x62, 0x09, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x30, 0x01, 0x12, 0xd0,
	0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x6e, 0x92, 0x41, 0x43, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x1a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x61,
	0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a,
	0x01, 0x2a, 0x62, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x22, 0x12, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x12, 0xc5, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6c, 0x92, 0x41, 0x3f,
	0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x0f, 0x47, 0x65,
	0x74, 0x20, 0x61, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x1a, 0x20, 0x47,
	0x65, 0x74, 0x20, 0x61, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x20, 0x66,
	0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x24, 0x62, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x12, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xd5, 0x01, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x25, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x73, 0x92, 0x41,
	0x43, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x12, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x1a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x62, 0x09, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x1a, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0xd4, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x72, 0x92, 0x41, 0x45, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x1a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x20, 0x61, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x20, 0x66, 0x72,
	0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x24, 0x62, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x2a,
	0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0xa2, 0x02, 0x92, 0x41, 0x6e, 0x12, 0x05,
	0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x01, 0x02, 0x72, 0x62, 0x0a, 0x23, 0x67, 0x52, 0x50, 0x43,
	0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x20, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x20, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x3b, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x6f, 0x68, 0x61, 0x6e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x68, 0x6f,
	0x72, 0x73, 0x74, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2d, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x0a, 0x11, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x42,
	0x0f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x79, 0x2f, 0x6e, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58,
	0xaa, 0x02, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0d, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x19, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_characters_v1_characters_proto_rawDescOnce sync.Once
	file_characters_v1_characters_proto_rawDescData = file_characters_v1_characters_proto_rawDesc
)

func file_characters_v1_characters_proto_rawDescGZIP() []byte {
	file_characters_v1_characters_proto_rawDescOnce.Do(func() {
		file_characters_v1_characters_proto_rawDescData = protoimpl.X.CompressGZIP(file_characters_v1_characters_proto_rawDescData)
	})
	return file_characters_v1_characters_proto_rawDescData
}

var file_characters_v1_characters_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_characters_v1_characters_proto_goTypes = []interface{}{
	(*Character)(nil),               // 0: characters.v1.Character
	(*CreateCharacterRequest)(nil),  // 1: characters.v1.CreateCharacterRequest
	(*CreateCharacterResponse)(nil), // 2: characters.v1.CreateCharacterResponse
	(*ListCharactersRequest)(nil),   // 3: characters.v1.ListCharactersRequest
	(*ListCharactersResponse)(nil),  // 4: characters.v1.ListCharactersResponse
	(*GetCharacterRequest)(nil),     // 5: characters.v1.GetCharacterRequest
	(*GetCharacterResponse)(nil),    // 6: characters.v1.GetCharacterResponse
	(*UpdateCharacterRequest)(nil),  // 7: characters.v1.UpdateCharacterRequest
	(*UpdateCharacterResponse)(nil), // 8: characters.v1.UpdateCharacterResponse
	(*DeleteCharacterRequest)(nil),  // 9: characters.v1.DeleteCharacterRequest
	(*DeleteCharacterResponse)(nil), // 10: characters.v1.DeleteCharacterResponse
	(*timestamppb.Timestamp)(nil),   // 11: google.protobuf.Timestamp
}
var file_characters_v1_characters_proto_depIdxs = []int32{
	11, // 0: characters.v1.Character.deleted_at:type_name -> google.protobuf.Timestamp
	0,  // 1: characters.v1.CreateCharacterRequest.character:type_name -> characters.v1.Character
	0,  // 2: characters.v1.CreateCharacterResponse.character:type_name -> characters.v1.Character
	0,  // 3: characters.v1.ListCharactersResponse.character:type_name -> characters.v1.Character
	0,  // 4: characters.v1.GetCharacterResponse.character:type_name -> characters.v1.Character
	0,  // 5: characters.v1.UpdateCharacterRequest.character:type_name -> characters.v1.Character
	0,  // 6: characters.v1.UpdateCharacterResponse.character:type_name -> characters.v1.Character
	0,  // 7: characters.v1.DeleteCharacterResponse.character:type_name -> characters.v1.Character
	3,  // 8: characters.v1.CharacterService.ListCharacters:input_type -> characters.v1.ListCharactersRequest
	1,  // 9: characters.v1.CharacterService.CreateCharacter:input_type -> characters.v1.CreateCharacterRequest
	5,  // 10: characters.v1.CharacterService.GetCharacter:input_type -> characters.v1.GetCharacterRequest
	7,  // 11: characters.v1.CharacterService.UpdateCharacter:input_type -> characters.v1.UpdateCharacterRequest
	9,  // 12: characters.v1.CharacterService.DeleteCharacter:input_type -> characters.v1.DeleteCharacterRequest
	4,  // 13: characters.v1.CharacterService.ListCharacters:output_type -> characters.v1.ListCharactersResponse
	2,  // 14: characters.v1.CharacterService.CreateCharacter:output_type -> characters.v1.CreateCharacterResponse
	6,  // 15: characters.v1.CharacterService.GetCharacter:output_type -> characters.v1.GetCharacterResponse
	8,  // 16: characters.v1.CharacterService.UpdateCharacter:output_type -> characters.v1.UpdateCharacterResponse
	10, // 17: characters.v1.CharacterService.DeleteCharacter:output_type -> characters.v1.DeleteCharacterResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_characters_v1_characters_proto_init() }
func file_characters_v1_characters_proto_init() {
	if File_characters_v1_characters_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_characters_v1_characters_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Character); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_v1_characters_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_v1_characters_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCharacterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_v1_characters_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCharactersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_v1_characters_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCharactersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_v1_characters_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_v1_characters_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCharacterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_v1_characters_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_v1_characters_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCharacterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_v1_characters_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_v1_characters_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCharacterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_characters_v1_characters_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_characters_v1_characters_proto_goTypes,
		DependencyIndexes: file_characters_v1_characters_proto_depIdxs,
		MessageInfos:      file_characters_v1_characters_proto_msgTypes,
	}.Build()
	File_characters_v1_characters_proto = out.File
	file_characters_v1_characters_proto_rawDesc = nil
	file_characters_v1_characters_proto_goTypes = nil
	file_characters_v1_characters_proto_depIdxs = nil
}
