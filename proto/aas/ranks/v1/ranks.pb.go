// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: aas/ranks/v1/ranks.proto

package ranksv1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Rank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UpperHotkeySid int32         `protobuf:"varint,2,opt,name=upper_hotkey_sid,json=upperHotkeySid,proto3" json:"upper_hotkey_sid,omitempty"`
	LowerHotkeySid int32         `protobuf:"varint,3,opt,name=lower_hotkey_sid,json=lowerHotkeySid,proto3" json:"lower_hotkey_sid,omitempty"`
	TitleSid       int32         `protobuf:"varint,4,opt,name=title_sid,json=titleSid,proto3" json:"title_sid,omitempty"`
	DescSid        int32         `protobuf:"varint,5,opt,name=desc_sid,json=descSid,proto3" json:"desc_sid,omitempty"`
	Cost           int32         `protobuf:"varint,6,opt,name=cost,proto3" json:"cost,omitempty"`
	LevelReq       int32         `protobuf:"varint,7,opt,name=level_req,json=levelReq,proto3" json:"level_req,omitempty"`
	Spell          int32         `protobuf:"varint,8,opt,name=spell,proto3" json:"spell,omitempty"`
	SpellType      int32         `protobuf:"varint,9,opt,name=spell_type,json=spellType,proto3" json:"spell_type,omitempty"`
	RecastTime     int32         `protobuf:"varint,10,opt,name=recast_time,json=recastTime,proto3" json:"recast_time,omitempty"`
	Expansion      int32         `protobuf:"varint,11,opt,name=expansion,proto3" json:"expansion,omitempty"`
	PrevId         int32         `protobuf:"varint,12,opt,name=prev_id,json=prevId,proto3" json:"prev_id,omitempty"`
	NextId         int32         `protobuf:"varint,13,opt,name=next_id,json=nextId,proto3" json:"next_id,omitempty"`
	Effects        []*RankEffect `protobuf:"bytes,14,rep,name=effects,proto3" json:"effects,omitempty"`
	Prereqs        []*RankPrereq `protobuf:"bytes,15,rep,name=prereqs,proto3" json:"prereqs,omitempty"`
}

func (x *Rank) Reset() {
	*x = Rank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aas_ranks_v1_ranks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rank) ProtoMessage() {}

func (x *Rank) ProtoReflect() protoreflect.Message {
	mi := &file_aas_ranks_v1_ranks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rank.ProtoReflect.Descriptor instead.
func (*Rank) Descriptor() ([]byte, []int) {
	return file_aas_ranks_v1_ranks_proto_rawDescGZIP(), []int{0}
}

func (x *Rank) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Rank) GetUpperHotkeySid() int32 {
	if x != nil {
		return x.UpperHotkeySid
	}
	return 0
}

func (x *Rank) GetLowerHotkeySid() int32 {
	if x != nil {
		return x.LowerHotkeySid
	}
	return 0
}

func (x *Rank) GetTitleSid() int32 {
	if x != nil {
		return x.TitleSid
	}
	return 0
}

func (x *Rank) GetDescSid() int32 {
	if x != nil {
		return x.DescSid
	}
	return 0
}

func (x *Rank) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *Rank) GetLevelReq() int32 {
	if x != nil {
		return x.LevelReq
	}
	return 0
}

func (x *Rank) GetSpell() int32 {
	if x != nil {
		return x.Spell
	}
	return 0
}

func (x *Rank) GetSpellType() int32 {
	if x != nil {
		return x.SpellType
	}
	return 0
}

func (x *Rank) GetRecastTime() int32 {
	if x != nil {
		return x.RecastTime
	}
	return 0
}

func (x *Rank) GetExpansion() int32 {
	if x != nil {
		return x.Expansion
	}
	return 0
}

func (x *Rank) GetPrevId() int32 {
	if x != nil {
		return x.PrevId
	}
	return 0
}

func (x *Rank) GetNextId() int32 {
	if x != nil {
		return x.NextId
	}
	return 0
}

func (x *Rank) GetEffects() []*RankEffect {
	if x != nil {
		return x.Effects
	}
	return nil
}

func (x *Rank) GetPrereqs() []*RankPrereq {
	if x != nil {
		return x.Prereqs
	}
	return nil
}

type RankEffect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankId   int32 `protobuf:"varint,1,opt,name=rank_id,json=rankId,proto3" json:"rank_id,omitempty"`
	Slot     int32 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	EffectId int32 `protobuf:"varint,3,opt,name=effect_id,json=effectId,proto3" json:"effect_id,omitempty"`
	Base1    int32 `protobuf:"varint,4,opt,name=base1,proto3" json:"base1,omitempty"`
	Base2    int32 `protobuf:"varint,5,opt,name=base2,proto3" json:"base2,omitempty"`
}

func (x *RankEffect) Reset() {
	*x = RankEffect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aas_ranks_v1_ranks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankEffect) ProtoMessage() {}

func (x *RankEffect) ProtoReflect() protoreflect.Message {
	mi := &file_aas_ranks_v1_ranks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankEffect.ProtoReflect.Descriptor instead.
func (*RankEffect) Descriptor() ([]byte, []int) {
	return file_aas_ranks_v1_ranks_proto_rawDescGZIP(), []int{1}
}

func (x *RankEffect) GetRankId() int32 {
	if x != nil {
		return x.RankId
	}
	return 0
}

func (x *RankEffect) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *RankEffect) GetEffectId() int32 {
	if x != nil {
		return x.EffectId
	}
	return 0
}

func (x *RankEffect) GetBase1() int32 {
	if x != nil {
		return x.Base1
	}
	return 0
}

func (x *RankEffect) GetBase2() int32 {
	if x != nil {
		return x.Base2
	}
	return 0
}

type RankPrereq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankId int32 `protobuf:"varint,1,opt,name=rank_id,json=rankId,proto3" json:"rank_id,omitempty"`
	AaId   int32 `protobuf:"varint,2,opt,name=aa_id,json=aaId,proto3" json:"aa_id,omitempty"`
	Points int32 `protobuf:"varint,3,opt,name=points,proto3" json:"points,omitempty"`
}

func (x *RankPrereq) Reset() {
	*x = RankPrereq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aas_ranks_v1_ranks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankPrereq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankPrereq) ProtoMessage() {}

func (x *RankPrereq) ProtoReflect() protoreflect.Message {
	mi := &file_aas_ranks_v1_ranks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankPrereq.ProtoReflect.Descriptor instead.
func (*RankPrereq) Descriptor() ([]byte, []int) {
	return file_aas_ranks_v1_ranks_proto_rawDescGZIP(), []int{2}
}

func (x *RankPrereq) GetRankId() int32 {
	if x != nil {
		return x.RankId
	}
	return 0
}

func (x *RankPrereq) GetAaId() int32 {
	if x != nil {
		return x.AaId
	}
	return 0
}

func (x *RankPrereq) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

type CreateRankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aaid int32 `protobuf:"varint,1,opt,name=aaid,proto3" json:"aaid,omitempty"`
	Rank *Rank `protobuf:"bytes,2,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *CreateRankRequest) Reset() {
	*x = CreateRankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aas_ranks_v1_ranks_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRankRequest) ProtoMessage() {}

func (x *CreateRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aas_ranks_v1_ranks_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRankRequest.ProtoReflect.Descriptor instead.
func (*CreateRankRequest) Descriptor() ([]byte, []int) {
	return file_aas_ranks_v1_ranks_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRankRequest) GetAaid() int32 {
	if x != nil {
		return x.Aaid
	}
	return 0
}

func (x *CreateRankRequest) GetRank() *Rank {
	if x != nil {
		return x.Rank
	}
	return nil
}

type CreateRankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank *Rank `protobuf:"bytes,1,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *CreateRankResponse) Reset() {
	*x = CreateRankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aas_ranks_v1_ranks_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRankResponse) ProtoMessage() {}

func (x *CreateRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aas_ranks_v1_ranks_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRankResponse.ProtoReflect.Descriptor instead.
func (*CreateRankResponse) Descriptor() ([]byte, []int) {
	return file_aas_ranks_v1_ranks_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRankResponse) GetRank() *Rank {
	if x != nil {
		return x.Rank
	}
	return nil
}

type ListRanksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aaid int32 `protobuf:"varint,1,opt,name=aaid,proto3" json:"aaid,omitempty"`
}

func (x *ListRanksRequest) Reset() {
	*x = ListRanksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aas_ranks_v1_ranks_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRanksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRanksRequest) ProtoMessage() {}

func (x *ListRanksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aas_ranks_v1_ranks_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRanksRequest.ProtoReflect.Descriptor instead.
func (*ListRanksRequest) Descriptor() ([]byte, []int) {
	return file_aas_ranks_v1_ranks_proto_rawDescGZIP(), []int{5}
}

func (x *ListRanksRequest) GetAaid() int32 {
	if x != nil {
		return x.Aaid
	}
	return 0
}

type ListRanksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aaid int32 `protobuf:"varint,1,opt,name=aaid,proto3" json:"aaid,omitempty"`
	Rank *Rank `protobuf:"bytes,2,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *ListRanksResponse) Reset() {
	*x = ListRanksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aas_ranks_v1_ranks_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRanksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRanksResponse) ProtoMessage() {}

func (x *ListRanksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aas_ranks_v1_ranks_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRanksResponse.ProtoReflect.Descriptor instead.
func (*ListRanksResponse) Descriptor() ([]byte, []int) {
	return file_aas_ranks_v1_ranks_proto_rawDescGZIP(), []int{6}
}

func (x *ListRanksResponse) GetAaid() int32 {
	if x != nil {
		return x.Aaid
	}
	return 0
}

func (x *ListRanksResponse) GetRank() *Rank {
	if x != nil {
		return x.Rank
	}
	return nil
}

type GetRankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aaid int32 `protobuf:"varint,1,opt,name=aaid,proto3" json:"aaid,omitempty"`
	Id   int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRankRequest) Reset() {
	*x = GetRankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aas_ranks_v1_ranks_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRankRequest) ProtoMessage() {}

func (x *GetRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aas_ranks_v1_ranks_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRankRequest.ProtoReflect.Descriptor instead.
func (*GetRankRequest) Descriptor() ([]byte, []int) {
	return file_aas_ranks_v1_ranks_proto_rawDescGZIP(), []int{7}
}

func (x *GetRankRequest) GetAaid() int32 {
	if x != nil {
		return x.Aaid
	}
	return 0
}

func (x *GetRankRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetRankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aaid int32 `protobuf:"varint,1,opt,name=aaid,proto3" json:"aaid,omitempty"`
	Id   int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Rank *Rank `protobuf:"bytes,3,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *GetRankResponse) Reset() {
	*x = GetRankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aas_ranks_v1_ranks_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRankResponse) ProtoMessage() {}

func (x *GetRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aas_ranks_v1_ranks_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRankResponse.ProtoReflect.Descriptor instead.
func (*GetRankResponse) Descriptor() ([]byte, []int) {
	return file_aas_ranks_v1_ranks_proto_rawDescGZIP(), []int{8}
}

func (x *GetRankResponse) GetAaid() int32 {
	if x != nil {
		return x.Aaid
	}
	return 0
}

func (x *GetRankResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetRankResponse) GetRank() *Rank {
	if x != nil {
		return x.Rank
	}
	return nil
}

type UpdateRankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aaid int32 `protobuf:"varint,1,opt,name=aaid,proto3" json:"aaid,omitempty"`
	Id   int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Rank *Rank `protobuf:"bytes,3,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *UpdateRankRequest) Reset() {
	*x = UpdateRankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aas_ranks_v1_ranks_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRankRequest) ProtoMessage() {}

func (x *UpdateRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aas_ranks_v1_ranks_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRankRequest.ProtoReflect.Descriptor instead.
func (*UpdateRankRequest) Descriptor() ([]byte, []int) {
	return file_aas_ranks_v1_ranks_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateRankRequest) GetAaid() int32 {
	if x != nil {
		return x.Aaid
	}
	return 0
}

func (x *UpdateRankRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRankRequest) GetRank() *Rank {
	if x != nil {
		return x.Rank
	}
	return nil
}

type UpdateRankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rank *Rank `protobuf:"bytes,1,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *UpdateRankResponse) Reset() {
	*x = UpdateRankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aas_ranks_v1_ranks_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRankResponse) ProtoMessage() {}

func (x *UpdateRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aas_ranks_v1_ranks_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRankResponse.ProtoReflect.Descriptor instead.
func (*UpdateRankResponse) Descriptor() ([]byte, []int) {
	return file_aas_ranks_v1_ranks_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateRankResponse) GetRank() *Rank {
	if x != nil {
		return x.Rank
	}
	return nil
}

type DeleteRankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aaid int32 `protobuf:"varint,1,opt,name=aaid,proto3" json:"aaid,omitempty"`
	Id   int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRankRequest) Reset() {
	*x = DeleteRankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aas_ranks_v1_ranks_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRankRequest) ProtoMessage() {}

func (x *DeleteRankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aas_ranks_v1_ranks_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRankRequest.ProtoReflect.Descriptor instead.
func (*DeleteRankRequest) Descriptor() ([]byte, []int) {
	return file_aas_ranks_v1_ranks_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteRankRequest) GetAaid() int32 {
	if x != nil {
		return x.Aaid
	}
	return 0
}

func (x *DeleteRankRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteRankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aaid int32 `protobuf:"varint,1,opt,name=aaid,proto3" json:"aaid,omitempty"`
	Id   int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRankResponse) Reset() {
	*x = DeleteRankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aas_ranks_v1_ranks_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRankResponse) ProtoMessage() {}

func (x *DeleteRankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aas_ranks_v1_ranks_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRankResponse.ProtoReflect.Descriptor instead.
func (*DeleteRankResponse) Descriptor() ([]byte, []int) {
	return file_aas_ranks_v1_ranks_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteRankResponse) GetAaid() int32 {
	if x != nil {
		return x.Aaid
	}
	return 0
}

func (x *DeleteRankResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_aas_ranks_v1_ranks_proto protoreflect.FileDescriptor

var file_aas_ranks_v1_ranks_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x61, 0x73, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x61, 0x6e, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x61, 0x73, 0x2e,
	0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x03, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x28, 0x0a, 0x10, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x68, 0x6f, 0x74, 0x6b, 0x65, 0x79, 0x5f,
	0x73, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x75, 0x70, 0x70, 0x65, 0x72,
	0x48, 0x6f, 0x74, 0x6b, 0x65, 0x79, 0x53, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x5f, 0x68, 0x6f, 0x74, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x48, 0x6f, 0x74, 0x6b, 0x65, 0x79,
	0x53, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x5f, 0x73, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x73, 0x63, 0x53, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x70, 0x65, 0x6c, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x70, 0x65,
	0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x70, 0x72, 0x65, 0x76, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x65, 0x78, 0x74,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x07, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x07, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71,
	0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61,
	0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x50, 0x72, 0x65, 0x72, 0x65,
	0x71, 0x52, 0x07, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0a, 0x52,
	0x61, 0x6e, 0x6b, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x61, 0x6e,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x6b,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x65, 0x31, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x62, 0x61, 0x73, 0x65, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x73,
	0x65, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x61, 0x73, 0x65, 0x32, 0x22,
	0x52, 0x0a, 0x0a, 0x52, 0x61, 0x6e, 0x6b, 0x50, 0x72, 0x65, 0x72, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x72, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x61, 0x61, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x22, 0x4f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x61, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x61, 0x61, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x61, 0x73,
	0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x22, 0x3c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72,
	0x61, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x22, 0x26, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x61, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x61, 0x61, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x61,
	0x61, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x34, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x61, 0x61, 0x69,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x5d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x61, 0x61, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e,
	0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x22, 0x5f, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x61, 0x61, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61,
	0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x22, 0x3c, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e, 0x6b,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22,
	0x37, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x61, 0x61, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x61, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x61, 0x61,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x32, 0x83, 0x07, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0xab, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x73,
	0x12, 0x1e, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x5b, 0x92, 0x41, 0x32, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x20, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x1a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x20,
	0x61, 0x6c, 0x6c, 0x20, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x62, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x61,
	0x73, 0x2f, 0x7b, 0x61, 0x61, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x30, 0x01,
	0x12, 0xb1, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12,
	0x1f, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x60, 0x92, 0x41, 0x34, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x72, 0x61, 0x6e, 0x6b, 0x1a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x72, 0x61, 0x6e, 0x6b, 0x20, 0x74, 0x6f, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x23, 0x3a, 0x01, 0x2a, 0x62, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x61, 0x73, 0x2f, 0x7b, 0x61, 0x61, 0x69, 0x64, 0x7d, 0x2f, 0x72,
	0x61, 0x6e, 0x6b, 0x73, 0x12, 0xa6, 0x01, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b,
	0x12, 0x1c, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x92,
	0x41, 0x30, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x0a, 0x47, 0x65, 0x74, 0x20, 0x61,
	0x20, 0x72, 0x61, 0x6e, 0x6b, 0x1a, 0x1b, 0x47, 0x65, 0x74, 0x20, 0x61, 0x20, 0x72, 0x61, 0x6e,
	0x6b, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x62, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x1d,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x61, 0x73, 0x2f, 0x7b, 0x61, 0x61, 0x69,
	0x64, 0x7d, 0x2f, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xb6, 0x01,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1f, 0x2e, 0x61,
	0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x61, 0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x65, 0x92, 0x41, 0x34, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x12, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x72, 0x61, 0x6e, 0x6b, 0x1a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x20, 0x61, 0x20, 0x72, 0x61, 0x6e, 0x6b, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01,
	0x2a, 0x62, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x1a, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x61, 0x73, 0x2f, 0x7b, 0x61, 0x61, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x61, 0x6e, 0x6b,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xaf, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1f, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e, 0x6b,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e,
	0x6b, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x92, 0x41, 0x36, 0x0a, 0x05, 0x52,
	0x61, 0x6e, 0x6b, 0x73, 0x12, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20, 0x72,
	0x61, 0x6e, 0x6b, 0x1a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20, 0x72, 0x61,
	0x6e, 0x6b, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x2a, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x61, 0x73, 0x2f, 0x7b, 0x61, 0x61, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x61,
	0x6e, 0x6b, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x93, 0x02, 0x92, 0x41, 0x6e, 0x12, 0x05,
	0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x01, 0x02, 0x72, 0x62, 0x0a, 0x23, 0x67, 0x52, 0x50, 0x43,
	0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x20, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x20, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x3b, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x6f, 0x68, 0x61, 0x6e, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x68, 0x6f,
	0x72, 0x73, 0x74, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2d, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x0a, 0x10, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x61, 0x73, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0a,
	0x52, 0x61, 0x6e, 0x6b, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x79,
	0x2f, 0x6e, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x61, 0x73, 0x2f, 0x72, 0x61,
	0x6e, 0x6b, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x61, 0x6e, 0x6b, 0x73, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x41, 0x52, 0x58, 0xaa, 0x02, 0x0c, 0x41, 0x61, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x73,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x0c, 0x41, 0x61, 0x73, 0x5c, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x18, 0x41, 0x61, 0x73, 0x5c, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e,
	0x41, 0x61, 0x73, 0x3a, 0x3a, 0x52, 0x61, 0x6e, 0x6b, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aas_ranks_v1_ranks_proto_rawDescOnce sync.Once
	file_aas_ranks_v1_ranks_proto_rawDescData = file_aas_ranks_v1_ranks_proto_rawDesc
)

func file_aas_ranks_v1_ranks_proto_rawDescGZIP() []byte {
	file_aas_ranks_v1_ranks_proto_rawDescOnce.Do(func() {
		file_aas_ranks_v1_ranks_proto_rawDescData = protoimpl.X.CompressGZIP(file_aas_ranks_v1_ranks_proto_rawDescData)
	})
	return file_aas_ranks_v1_ranks_proto_rawDescData
}

var file_aas_ranks_v1_ranks_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_aas_ranks_v1_ranks_proto_goTypes = []interface{}{
	(*Rank)(nil),               // 0: aas.ranks.v1.Rank
	(*RankEffect)(nil),         // 1: aas.ranks.v1.RankEffect
	(*RankPrereq)(nil),         // 2: aas.ranks.v1.RankPrereq
	(*CreateRankRequest)(nil),  // 3: aas.ranks.v1.CreateRankRequest
	(*CreateRankResponse)(nil), // 4: aas.ranks.v1.CreateRankResponse
	(*ListRanksRequest)(nil),   // 5: aas.ranks.v1.ListRanksRequest
	(*ListRanksResponse)(nil),  // 6: aas.ranks.v1.ListRanksResponse
	(*GetRankRequest)(nil),     // 7: aas.ranks.v1.GetRankRequest
	(*GetRankResponse)(nil),    // 8: aas.ranks.v1.GetRankResponse
	(*UpdateRankRequest)(nil),  // 9: aas.ranks.v1.UpdateRankRequest
	(*UpdateRankResponse)(nil), // 10: aas.ranks.v1.UpdateRankResponse
	(*DeleteRankRequest)(nil),  // 11: aas.ranks.v1.DeleteRankRequest
	(*DeleteRankResponse)(nil), // 12: aas.ranks.v1.DeleteRankResponse
}
var file_aas_ranks_v1_ranks_proto_depIdxs = []int32{
	1,  // 0: aas.ranks.v1.Rank.effects:type_name -> aas.ranks.v1.RankEffect
	2,  // 1: aas.ranks.v1.Rank.prereqs:type_name -> aas.ranks.v1.RankPrereq
	0,  // 2: aas.ranks.v1.CreateRankRequest.rank:type_name -> aas.ranks.v1.Rank
	0,  // 3: aas.ranks.v1.CreateRankResponse.rank:type_name -> aas.ranks.v1.Rank
	0,  // 4: aas.ranks.v1.ListRanksResponse.rank:type_name -> aas.ranks.v1.Rank
	0,  // 5: aas.ranks.v1.GetRankResponse.rank:type_name -> aas.ranks.v1.Rank
	0,  // 6: aas.ranks.v1.UpdateRankRequest.rank:type_name -> aas.ranks.v1.Rank
	0,  // 7: aas.ranks.v1.UpdateRankResponse.rank:type_name -> aas.ranks.v1.Rank
	5,  // 8: aas.ranks.v1.RankService.ListRanks:input_type -> aas.ranks.v1.ListRanksRequest
	3,  // 9: aas.ranks.v1.RankService.CreateRank:input_type -> aas.ranks.v1.CreateRankRequest
	7,  // 10: aas.ranks.v1.RankService.GetRank:input_type -> aas.ranks.v1.GetRankRequest
	9,  // 11: aas.ranks.v1.RankService.UpdateRank:input_type -> aas.ranks.v1.UpdateRankRequest
	11, // 12: aas.ranks.v1.RankService.DeleteRank:input_type -> aas.ranks.v1.DeleteRankRequest
	6,  // 13: aas.ranks.v1.RankService.ListRanks:output_type -> aas.ranks.v1.ListRanksResponse
	4,  // 14: aas.ranks.v1.RankService.CreateRank:output_type -> aas.ranks.v1.CreateRankResponse
	8,  // 15: aas.ranks.v1.RankService.GetRank:output_type -> aas.ranks.v1.GetRankResponse
	10, // 16: aas.ranks.v1.RankService.UpdateRank:output_type -> aas.ranks.v1.UpdateRankResponse
	12, // 17: aas.ranks.v1.RankService.DeleteRank:output_type -> aas.ranks.v1.DeleteRankResponse
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_aas_ranks_v1_ranks_proto_init() }
func file_aas_ranks_v1_ranks_proto_init() {
	if File_aas_ranks_v1_ranks_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aas_ranks_v1_ranks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aas_ranks_v1_ranks_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankEffect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aas_ranks_v1_ranks_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankPrereq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aas_ranks_v1_ranks_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aas_ranks_v1_ranks_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aas_ranks_v1_ranks_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRanksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aas_ranks_v1_ranks_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRanksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aas_ranks_v1_ranks_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aas_ranks_v1_ranks_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aas_ranks_v1_ranks_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aas_ranks_v1_ranks_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aas_ranks_v1_ranks_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aas_ranks_v1_ranks_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aas_ranks_v1_ranks_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aas_ranks_v1_ranks_proto_goTypes,
		DependencyIndexes: file_aas_ranks_v1_ranks_proto_depIdxs,
		MessageInfos:      file_aas_ranks_v1_ranks_proto_msgTypes,
	}.Build()
	File_aas_ranks_v1_ranks_proto = out.File
	file_aas_ranks_v1_ranks_proto_rawDesc = nil
	file_aas_ranks_v1_ranks_proto_goTypes = nil
	file_aas_ranks_v1_ranks_proto_depIdxs = nil
}
