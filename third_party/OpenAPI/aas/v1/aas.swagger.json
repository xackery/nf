{
  "swagger": "2.0",
  "info": {
    "title": "aas/v1/aas.proto",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "AaService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/aas": {
      "get": {
        "summary": "List aas",
        "description": "List all aas on the server.",
        "operationId": "AaService_ListAas",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1Aa"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of v1ListAasResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Aas"
        ]
      },
      "post": {
        "summary": "Create a aa",
        "description": "Create a aa to the server.",
        "operationId": "AaService_CreateAa",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Aa"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAaRequest"
            }
          }
        ],
        "tags": [
          "Aas"
        ]
      }
    },
    "/api/v1/aas/{id}": {
      "get": {
        "summary": "Get a aa",
        "description": "Get a aa from the server.",
        "operationId": "AaService_GetAa",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Aa"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Aas"
        ]
      },
      "delete": {
        "summary": "Delete a aa",
        "description": "Delete a aa from the server.",
        "operationId": "AaService_DeleteAa",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Aa"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Aas"
        ]
      },
      "put": {
        "summary": "Update a aa",
        "description": "Update a aa on the server.",
        "operationId": "AaService_UpdateAa",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/v1Aa"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "aa": {
                  "$ref": "#/definitions/v1Aa"
                }
              }
            }
          }
        ],
        "tags": [
          "Aas"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Aa": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "category": {
          "type": "integer",
          "format": "int32"
        },
        "classes": {
          "type": "integer",
          "format": "int32"
        },
        "races": {
          "type": "integer",
          "format": "int32"
        },
        "drakkinHeritage": {
          "type": "integer",
          "format": "int32"
        },
        "deities": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "charges": {
          "type": "integer",
          "format": "int32"
        },
        "grantOnly": {
          "type": "boolean"
        },
        "firstRankId": {
          "type": "integer",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean"
        },
        "resetOnDeath": {
          "type": "boolean"
        }
      }
    },
    "v1CreateAaRequest": {
      "type": "object",
      "properties": {
        "aa": {
          "$ref": "#/definitions/v1Aa"
        }
      }
    },
    "v1CreateAaResponse": {
      "type": "object",
      "properties": {
        "aa": {
          "$ref": "#/definitions/v1Aa"
        }
      }
    },
    "v1DeleteAaResponse": {
      "type": "object",
      "properties": {
        "aa": {
          "$ref": "#/definitions/v1Aa"
        }
      }
    },
    "v1GetAaResponse": {
      "type": "object",
      "properties": {
        "aa": {
          "$ref": "#/definitions/v1Aa"
        }
      }
    },
    "v1ListAasResponse": {
      "type": "object",
      "properties": {
        "aa": {
          "$ref": "#/definitions/v1Aa"
        }
      }
    },
    "v1UpdateAaResponse": {
      "type": "object",
      "properties": {
        "aa": {
          "$ref": "#/definitions/v1Aa"
        }
      }
    }
  },
  "externalDocs": {
    "description": "gRPC-gateway boilerplate repository",
    "url": "https://github.com/johanbrandhorst/grpc-gateway-boilerplate"
  }
}
